/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf/WGS-BACTERIAN NANOPORE CONFIG FILE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
    Author: Jimmy Lucas
    Description: Configuration for WGS Analysis Workflow
    Repository: 
    Nextflow Version: >=23.04.4.5881
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

params {
    input                   = "$projectDir/data/in/*"
    reference               = "$projectDir/data/reference_genome/*.{fna,fa,fasta}"
    outdir                  = "$projectDir/data/out"
    index_genome_personal   = "$projectDir/data/reference_genome/personal/index/index_personal_genome"
    genome_size_file        = "*.csv"
    genome_name_db          = "Acinetobacter_baumannii_clinical_1"
    filterClustersScript    = "$projectDir/bin/assemble/trycycler/filter_clusters.sh"

//Docker containers
    trycyler.docker         = "staphb/trycycler:latest"
    gatk4.docker            = "broadinstitute/gatk:4.5.0.0"
    bakta.docker            = "jimmlucas/bakta:wgs"
    snpeff.docker           = "jimmlucas/snpeff:wgs"
    agat.docker             = "jimmlucas/agat:wgs"
    abricate.docker         = "staphb/abricate:latest"
    amrfinderplus.docker    = "staphb/ncbi-amrfinderplus:latest"
    pegaso_deeparg.docker   = "sebimer/pegase-deeparg:1.0.4"
    medaka.docker           = "staphb/medaka:latest"
    quast.docker            = "ghcr.io/jimmlucas/wgs:short_reads"
    busco.docker            = "jimmlucas/busco:latest"
    prokka.docker           = "staphb/prokka:latest"
    singleEnd               = false

// Max resource options, defaults only, expecting to be overwritten
    gatk_memory     = 10        // should be same as max_memory  
    max_threads     = 16

}

profiles {

    hpc {
        process.executor = 'slurm'
        singularity.enabled = true
        singularity.autoMounts = true
        process.queue = ''
        process.cpus = 4
        process.memory = '64 GB'
        process.time = '6H'
        workDir = '/scratch/$USER/work'
        params.outdir = '/scratch/$USER/data/out'

    }
    conda {
        params.enable_conda    = true
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        process {
            executor = 'local'
            cpus = 24
            memory = '50GB'
            container = 'ghcr.io/jimmlucas/ont:long_reads'
            maxForks = 6
            containerOptions = '--cpus=24 --memory=50g'
        }
        docker.enabled         = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
}

report {
    enabled = true
    file = "${params.outdir}/report/DVT_report.html"
    overwrite = true
}
timeline {
    enabled = true
    file = "${params.outdir}/report/DVT_timeline.html"
    overwrite = true
}
trace {
    enabled = true
    file = "${params.outdir}/report/DVT_trace.txt"
    overwrite = true
}
dag {
    enabled = true
    file = "${params.outdir}/report/DVT_dag.svg"
    overwrite = true
}
